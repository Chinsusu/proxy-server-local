var $=function(s){return document.querySelector(s)}; var $$=function(s){return document.querySelectorAll(s)};
var apiBase="/api"; var agentBase="/agent";

var ST={tab:"dashboard", pSort:"endpoint", pAsc:true, mSort:"client", mAsc:true,
        pFilter:{q:"",status:""}, mFilter:{q:""}, proxies:[], mappings:[]};

function banner(msg, kind){ var b=document.getElementById("banner");
  if(!b){ b=document.createElement("div"); b.id="banner"; document.body.appendChild(b); }
  b.className="toast "+(kind||""); b.textContent=msg; b.style.display="block";
  clearTimeout(b._t); b._t=setTimeout(function(){ b.style.display="none"; }, 3000);
}
function clearBanner(){ var b=document.getElementById("banner"); if(b){ b.style.display="none"; } }
function fmtStatus(s){ if(!s) return "<span class=\"badge\">UNK</span>"; var x=String(s).toUpperCase();
  if(x==="UP") return "<span class=\"badge ok\">UP</span>";
  if(x==="DEGRADED") return "<span class=\"badge warn\">DEGRADED</span>";
  if(x==="DOWN") return "<span class=\"badge bad\">DOWN</span>";
  return "<span class=\"badge\">"+x+"</span>";
}
function fmtLatency(v){ if(v==null||v==="") return "";
  var c=(v<250)?"lat-ok":(v<600?"lat-warn":"lat-bad"); return '<span class="'+c+'">'+v+'</span>';
}
function api(path,opt){ opt=opt||{}; var o={headers:{"Content-Type":"application/json"}}; for(var k in opt){o[k]=opt[k]}
  return fetch(apiBase+path,o).then(function(r){ if(!r.ok) throw new Error("API "+r.status+" "+path); if(r.status===204) return null; return r.json(); });
}
function agent(path,opt){ opt=opt||{}; return fetch(agentBase+path,opt).then(function(r){ if(!r.ok) throw new Error("AGENT "+r.status+" "+path); return r.text(); }); }

function loadAll(){
  clearBanner();
  return api("/v1/proxies").then(function(p){ ST.proxies=p||[]; })
  .then(function(){ return api("/v1/mappings/active").then(function(m){ ST.mappings=m||[]; }); })
  .then(function(){ renderAll(); })
  .catch(function(e){ banner(e.message,"bad"); console.error(e); });
}

function byKey(obj, key){
  if(key==="endpoint"){ return String((obj.host||"")+":"+obj.port).toLowerCase(); }
  if(key==="status"){ return String(obj.status||"").toLowerCase(); }
  if(key==="latency"){ return (obj.latency_ms==null?1e12:obj.latency_ms); }
  if(key==="exitip"){ return String(obj.exit_ip||"").toLowerCase(); }
  if(key==="id"||key==="type"){ return String(obj[key]||"").toLowerCase(); }
  if(key==="client"){ return String(((obj.client||{}).ip_cidr)||"").toLowerCase(); }
  if(key==="proxy"){ var p=(obj.proxy||{}); return String((p.host||"")+":"+(p.port!=null?p.port:"")).toLowerCase(); }
  if(key==="redirect"){ return (obj.local_redirect_port!=null)?obj.local_redirect_port:0; }
  return "";
}

function renderAll(){
  $("#stat-proxies").textContent=String(ST.proxies.length||0);
  $("#stat-mappings").textContent=String(ST.mappings.length||0);
  $("#stat-last").textContent=(new Date()).toLocaleTimeString();

  var pq=(ST.pFilter.q||"").toLowerCase();
  var ps=(ST.pFilter.status||"").toLowerCase();
  var pFiltered=ST.proxies.filter(function(p){
    var hitQ=!pq||(String(p.id||"").toLowerCase().indexOf(pq)>=0)
      ||(String(p.type||"").toLowerCase().indexOf(pq)>=0)
      ||(String((p.host||"")+":"+p.port).toLowerCase().indexOf(pq)>=0)
      ||(String(p.exit_ip||"").toLowerCase().indexOf(pq)>=0);
    var hitS=!ps||String(p.status||"").toLowerCase()===ps;
    return hitQ&&hitS;
  });
  pFiltered.sort(function(a,b){ var ka=(ST.pSort==="latency")?byKey(a,"latency"):byKey(a,ST.pSort);
    var kb=(ST.pSort==="latency")?byKey(b,"latency"):byKey(b,ST.pSort);
    if(ka<kb) return ST.pAsc?-1:1; if(ka>kb) return ST.pAsc?1:-1; return 0;
  });

  var colProxies='<colgroup>'
    +'<col class="c-id"><col class="c-type"><col class="c-endpoint">'
    +'<col class="c-status"><col class="c-latency"><col class="c-exitip"><col class="c-actions"></colgroup>';
  var ptools='<div class="toolbar">'
    +'<input type="text" id="proxy-q" placeholder="Search host/IP/ID" value="'+(ST.pFilter.q||'')+'"/>'
    +'<select id="proxy-status"><option value="">All status</option>'
    +'<option value="UP"'+(ST.pFilter.status==="UP"?' selected':'')+'>UP</option>'
    +'<option value="DEGRADED"'+(ST.pFilter.status==="DEGRADED"?' selected':'')+'>DEGRADED</option>'
    +'<option value="DOWN"'+(ST.pFilter.status==="DOWN"?' selected':'')+'>DOWN</option></select>'
    +'<button class="secondary" id="btn-clear-pfilter">Clear</button></div>';
  var phead='<thead><tr>'
    +'<th class="sortable'+(ST.pSort==="id"?' active':'')+'" data-key="id">ID</th>'
    +'<th class="sortable'+(ST.pSort==="type"?' active':'')+'" data-key="type">Type</th>'
    +'<th class="sortable'+(ST.pSort==="endpoint"?' active':'')+'" data-key="endpoint">Endpoint</th>'
    +'<th class="sortable'+(ST.pSort==="status"?' active':'')+'" data-key="status">Status</th>'
    +'<th class="sortable'+(ST.pSort==="latency"?' active':'')+'" data-key="latency">Latency</th>'
    +'<th class="sortable'+(ST.pSort==="exitip"?' active':'')+'" data-key="exitip">Exit IP</th>'
    +'<th>Actions</th></tr></thead>';

  var phtml = '<div class="table-wrap"><table id="tbl-proxies" class="data">'+colProxies+phead+'<tbody>';
  for(var i=0;i<pFiltered.length;i++){
    var p=pFiltered[i], lat=(p.hasOwnProperty("latency_ms")&&p.latency_ms!=null)?p.latency_ms:"";
    var ep=(p.host||"")+":"+p.port, exitip=(p.hasOwnProperty("exit_ip")&&p.exit_ip!=null)?p.exit_ip:"";
    phtml+='<tr>'
      +'<td>'+String(p.id||"").substring(0,8)+'</td>'
      +'<td>'+(p.type||"")+'</td>'
      +'<td class="mono"><span class="ellipsis" title="'+ep+'">'+ep+'</span></td>'
      +'<td>'+fmtStatus(p.status)+'</td>'
      +'<td>'+fmtLatency(lat)+'</td>'
      +'<td class="mono"><span class="ellipsis" title="'+exitip+'">'+exitip+'</span></td>'
      +'<td><button class="secondary" onclick="checkProxy(\''+p.id+'\')">Check</button></td>'
      +'</tr>';
  }
  phtml+='</tbody></table></div>';
  $("#proxies").innerHTML=ptools+phtml;

  // mappings
  var mq=(ST.mFilter.q||"").toLowerCase();
  var mFiltered=ST.mappings.filter(function(mv){
    var c=(mv.client||{}).ip_cidr||"", p=(mv.proxy||{}); var ph=(p.host||"")+":"+(p.port!=null?p.port:"");
    return !mq||String(mv.id||"").toLowerCase().indexOf(mq)>=0||c.toLowerCase().indexOf(mq)>=0||ph.toLowerCase().indexOf(mq)>=0;
  });
  mFiltered.sort(function(a,b){ var ka=byKey(a,ST.mSort), kb=byKey(b,ST.mSort);
    if(ka<kb) return ST.mAsc?-1:1; if(ka>kb) return ST.mAsc?1:-1; return 0; });

  var colMap='<colgroup><col class="c-id"><col class="c-client"><col class="c-proxy"><col class="c-redirect"><col class="c-actions"></colgroup>';
  var mtools='<div class="toolbar">'
    +'<input type="text" id="map-q" placeholder="Search id/client/proxy" value="'+(ST.mFilter.q||'')+'"/>'
    +'<button class="secondary" id="btn-clear-mfilter">Clear</button></div>';
  var mhead='<thead><tr>'
    +'<th class="sortable'+(ST.mSort==="id"?' active':'')+'" data-key="id">ID</th>'
    +'<th class="sortable'+(ST.mSort==="client"?' active':'')+'" data-key="client">Client</th>'
    +'<th class="sortable'+(ST.mSort==="proxy"?' active':'')+'" data-key="proxy">Proxy</th>'
    +'<th class="sortable'+(ST.mSort==="redirect"?' active':'')+'" data-key="redirect">Redirect</th>'
    +'<th></th></tr></thead>';
  var rows='';
  for(var r=0;r<mFiltered.length;r++){
    var mv=mFiltered[r], cCIDR=(mv.client&&mv.client.ip_cidr)?mv.client.ip_cidr:"",
      ph=(mv.proxy&&mv.proxy.host)?mv.proxy.host:"", pp=(mv.proxy&&mv.proxy.port!=null)?mv.proxy.port:"",
      red=(mv.local_redirect_port!=null)?mv.local_redirect_port:"";
    var full=ph+':'+pp;
    rows+='<tr>'
      +'<td>'+String(mv.id||"").substring(0,8)+'</td>'
      +'<td class="mono">'+cCIDR+'</td>'
      +'<td class="mono"><span class="ellipsis" title="'+full+'">'+full+'</span></td>'
      +'<td>'+red+'</td>'
      +'<td><button class="secondary" onclick="delMapping(\''+mv.id+'\')">Delete</button></td>'
      +'</tr>';
  }
  var mhtml='<div class="table-wrap"><table id="tbl-mappings" class="data">'+colMap+mhead+'<tbody>'+rows+'</tbody></table></div>';
  $("#mappings").innerHTML=mtools+mhtml; $("#mappings2").innerHTML=$("#mappings").innerHTML;

  // filters
  var pqEl=$("#proxy-q"), psEl=$("#proxy-status"), mqEl=$("#map-q");
  if(pqEl){ pqEl.oninput=function(){ ST.pFilter.q=this.value; renderAll(); }; }
  if(psEl){ psEl.onchange=function(){ ST.pFilter.status=this.value; renderAll(); }; }
  if(mqEl){ mqEl.oninput=function(){ ST.mFilter.q=this.value; renderAll(); }; }
  var c1=$("#btn-clear-pfilter"); if(c1){ c1.onclick=function(){ ST.pFilter={q:"",status:""}; renderAll(); }; }
  var c2=$("#btn-clear-mfilter"); if(c2){ c2.onclick=function(){ ST.mFilter={q:""}; renderAll(); }; }

  // sort
  function hookSort(tblId, which){
    var heads=$$('#'+tblId+' thead th.sortable');
    for(var i=0;i<heads.length;i++){
      (function(th){
        th.style.cursor="pointer";
        th.onclick=function(){
          var key=th.getAttribute("data-key");
          var asc=(which==="p")?ST.pAsc:ST.mAsc;
          var cur=(which==="p")?ST.pSort:ST.mSort;
          if(cur===key){ asc=!asc; } else { asc=true; }
          if(which==="p"){ ST.pSort=key; ST.pAsc=asc; } else { ST.mSort=key; ST.mAsc=asc; }
          renderAll();
        };
      })(heads[i]);
    }
  }
  hookSort("tbl-proxies","p"); hookSort("tbl-mappings","m");
}

function checkProxy(id){ api("/v1/proxies/"+id+"/check",{method:"POST"})
  .then(function(){ banner("Health-check done","ok"); }).then(loadAll).catch(function(e){banner(e.message,"bad")}); }
function healthAll(){ api("/v1/proxies").then(function(ps){
  function iter(k){ if(k>=ps.length) return Promise.resolve();
    return api("/v1/proxies/"+ps[k].id+"/check",{method:"POST"}).catch(function(){}).then(function(){ return iter(k+1); }); }
  return iter(0);
}).then(function(){ banner("Health-check all done","ok"); }).then(loadAll).catch(function(e){banner(e.message,"bad")}); }
function createProxy(form){
  try{ var fd=new FormData(form);
    var body={ type:fd.get("type"), host:fd.get("host"), port:Number(fd.get("port")),
      username:fd.get("username")||undefined, password:fd.get("password")||undefined, enabled:true };
    api("/v1/proxies",{method:"POST",body:JSON.stringify(body)})
      .then(function(){ banner("Proxy created","ok"); }).then(healthAll).then(function(){ form.reset(); })
      .catch(function(e){banner(e.message,"bad")});
  }catch(e){ banner(e.message,"bad"); }
}
function createMapping(form){
  try{ var fd=new FormData(form), cidr=(fd.get("cidr")||"").trim(), proxy_id=fd.get("proxy_id");
    api("/v1/clients",{method:"POST",body:JSON.stringify({ip_cidr:cidr,enabled:true})})
      .then(function(c){ return api("/v1/mappings",{method:"POST",body:JSON.stringify({client_id:c.id,proxy_id:proxy_id})}); })
      .then(function(){ return agent("/reconcile"); })
      .then(function(){ banner("Mapping created & rules applied","ok"); })
      .then(loadAll).then(function(){ form.reset(); })
      .catch(function(e){ banner(e.message,"bad"); });
  }catch(e){ banner(e.message,"bad"); }
}
function delMapping(id){ api("/v1/mappings/"+id,{method:"DELETE"})
  .then(function(){ return agent("/reconcile"); })
  .then(function(){ banner("Mapping deleted & rules applied","ok"); })
  .then(loadAll).catch(function(e){ banner(e.message,"bad"); }); }

// Tabs + persist
function setActiveTab(tabId){
  var secs=$$('.tab'); for(var k=0;k<secs.length;k++){secs[k].classList.remove('active')}
  var tabs=$$('header nav button'); for(var t=0;t<tabs.length;t++){tabs[t].classList.remove('active')}
  var sec=document.getElementById(tabId); if(sec) sec.classList.add('active');
  var btn=document.querySelector('header nav button[data-tab="'+tabId+'"]'); if(btn) btn.classList.add('active');
  try{ localStorage.setItem('pgw_tab', tabId); }catch(_){}
}
function wire(){
  var tabs=document.querySelectorAll("header nav button");
  for(var i=0;i<tabs.length;i++){ (function(btn){ btn.addEventListener("click",function(){ setActiveTab(btn.getAttribute("data-tab")); }); })(tabs[i]); }
  $("#form-proxy").addEventListener("submit",function(e){e.preventDefault();createProxy(e.target);});
  $("#form-mapping").addEventListener("submit",function(e){e.preventDefault();createMapping(e.target);});
  $("#btn-health-all").addEventListener("click",healthAll);
  $("#btn-reconcile").addEventListener("click",function(){agent("/reconcile").then(function(){banner("Rules applied","ok");}).then(loadAll).catch(function(e){banner(e.message,"bad")})});
  $("#btn-refresh").addEventListener("click",loadAll);
  $("#btn-reconcile-2").addEventListener("click",function(){agent("/reconcile").then(function(){banner("Rules applied","ok");}).then(loadAll).catch(function(e){banner(e.message,"bad")})});
  $("#btn-refresh-2").addEventListener("click",loadAll);
  $("#cfg-api").textContent=window.location.origin+"/api";
  $("#cfg-agent").textContent=window.location.origin+"/agent";
  var wanted="dashboard"; try{ wanted=localStorage.getItem('pgw_tab')||"dashboard"; }catch(_){}
  setActiveTab(wanted);
}
(function(){ wire(); loadAll(); setInterval(loadAll,10000); })();
